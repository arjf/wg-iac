name: Deploy
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Install latest SOPS
        run: |
          sudo apt-get update && sudo apt-get install -y jq curl
          # Fetch the latest release download URL for linux amd64
          SOPS_URL=$(curl -s https://api.github.com/repos/getsops/sops/releases/latest \
            | jq -r '.assets[] | select(.name | test("sops-.*.linux.amd64$")) | .browser_download_url')
          curl -fsSL -o sops "$SOPS_URL"
          chmod +x sops
          sudo mv sops /usr/local/bin/
      
      - name: Install Cloudflared
        run: |
          curl -fsSL -o /usr/local/bin/cloudflared https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64
          chmod +x /usr/local/bin/cloudflared

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Import PGP key
        run: |
          echo "${{ secrets.PGP_PRIVATE_KEY }}" | gpg --import

      - name: Decrypt secrets
        run: |
          sops -d -i "tf/environments/prod.tfvars"
          sops -d -i "wg-app/config.yaml"
          sops -d -i "cloudflared/cloudflared.env"

      - name: Start CF ZTNA proxy
        run: |
          bash cloudflared/ssh-tunnel.bash

      - name: Terraform Init & Validate
        run: |
          terraform -chdir=tf init
          terraform -chdir=tf validate
          terraform -chdir=tf plan -var-file=environments/prod.tfvars
          terraform -chdir=tf apply -var-file=environments/prod.tfvars -auto-approve